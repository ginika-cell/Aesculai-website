import React, { StrictMode, CSSProperties } from 'react';
import { createRoot } from 'react-dom/client';

// --- Data ---
const appDetails = {
  name: 'Aesculai',
  tagline: 'Intelligent medical simulation and learning for Pros & Students.',
  description: [
    'Aesculai is a state-of-the-art AI-powered health simulation and learning tool designed for healthcare professionals and medical students. Sharpen your clinical skills, explore diagnostic possibilities, and access critical medical knowledge in a safe, integrated environment.',
    'Built to mirror the complexities of real-world practice, Aesculai empowers you to simulate patient encounters, deepen your understanding of conditions and treatments, and enhance your diagnostic workflow without ever handling actual patient data.',
  ],
  playStoreUrl: 'https://play.google.com/store/apps/details?id=com.aesculai.app',
  playStoreBadgeUrl: 'https://play.google.com/intl/en_us/badges/static/images/badges/en_badge_web_generic.png',
};

const features = [
  {
    title: 'Intelligent Clinical Assessment',
    description: 'Guide through virtual history taking, get AI differential diagnoses based on symptoms, receive suggested investigations and physical exam points. Practice the full diagnostic process.',
    icon: <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M12 2a10 10 0 1 0 10 10A10 10 0 0 0 12 2zM12 18a6 6 0 1 1 6-6 6 6 0 0 1-6 6z"/><path d="M12 6v6h6"/></svg>
  },
  {
    title: 'Comprehensive Drug Guide',
    description: 'Scan or search for virtual drugs to access detailed pharmacological information, indications, contraindications, adverse effects, interactions, dosing, and potential alternatives.',
    icon: <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M12 2l-8 4.5v9l8 4.5 8-4.5v-9L12 2z"/><path d="M12 22V12"/><path d="M12 12L4 7.5"/><path d="M12 12l8-4.5"/><path d="M4 7.5l8 4.5"/><path d="M20 7.5l-8 4.5"/></svg>
  },
  {
    title: 'AI Imaging Support',
    description: 'Upload sample or educational medical images (X-ray, CT, MRI, etc.) for AI-assisted interpretation and analysis to hone your skills.',
    icon: <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><rect x="3" y="3" width="18" height="18" rx="2" ry="2"/><circle cx="8.5" cy="8.5" r="1.5"/><path d="M21 15l-5-5L5 21"/></svg>
  },
  {
    title: 'Interactive Learning',
    description: 'Practice with realistic Clinical Case Scenarios designed to test and build your diagnostic and management reasoning. Use the Medical Chatbot to explore medical concepts and clarify questions.',
    icon: <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"/></svg>
  },
  {
    title: 'Automated Simulation Notes',
    description: 'See how patient history and assessment details can be structured into comprehensive notes during simulation.',
    icon: <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/><path d="M14 2v6h6"/><path d="M16 13H8"/><path d="M16 17H8"/><path d="M10 9H8"/></svg>
  },
  {
    title: 'Personalized Experience',
    description: 'Tailored content and a guided experience based on your role (Practicing Professional or Medical Student).',
    icon: <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/><circle cx="12" cy="7" r="4"/></svg>
  },
];

const permissionsInfo = {
  title: 'Permissions',
  content: 'We request limited permissions to enhance your simulation experience:',
  points: [
    'Network access: Required to connect to our AI models and simulation databases.',
    'Camera access: For scanning drug packaging (simulated) or uploading images (educational/sample) for analysis.',
    'Media/Storage: For uploading educational or sample images from your device\'s gallery for analysis.',
  ],
};

const aboutInfo = {
  title: 'About Aesculai',
  content: 'Developed by a team of medical students, Aesculai is built to be a reliable and intuitive tool for professional development. Our mission is to provide an accessible platform for simulating clinical scenarios, reinforcing learning, and practicing the use of decision support tools in a controlled, no-risk environment. Aesculai does not store any real patient data from individual accounts.',
};

const disclaimerInfo = {
  title: 'Important Disclaimer',
  content: 'Aesculai is a health simulation and learning tool ONLY. It is NOT intended for use with real patient data, nor should it be used to provide medical advice, diagnose real medical conditions, or make treatment decisions for actual patients. The information and outputs provided are for educational and simulation purposes only. Always use your own professional judgment, consult primary medical sources, and seek advice from qualified healthcare professionals for any real patient care or medical concerns. Relying solely on this app for actual medical practice is not appropriate.',
};

// --- Styles ---
const GlobalStyles = () => (
  <style>{`
    :root {
      --primary-color: #2c3e50;
      --secondary-color: #3498db;
      --background-color: #f4f6f8;
      --card-background: #ffffff;
      --text-color: #34495e;
      --light-text-color: #7f8c8d;
      --disclaimer-bg: #f8d7da;
      --disclaimer-text: #721c24;
      --disclaimer-border: #f5c6cb;
    }
    body {
      margin: 0;
      font-family: 'Roboto', sans-serif;
      background-color: var(--background-color);
      color: var(--text-color);
      line-height: 1.6;
    }
    .container {
      max-width: 1100px;
      margin: 0 auto;
      padding: 0 20px;
    }
    .download-button {
      background-color: var(--secondary-color);
      color: #fff;
      padding: 0.5rem 1rem;
      border-radius: 5px;
      text-decoration: none;
      font-weight: 500;
      transition: background-color 0.2s ease-in-out;
    }
    .download-button:hover {
      background-color: #2980b9; /* A darker shade of secondary-color */
    }
    @media (max-width: 900px) {
      .features-grid {
        grid-template-columns: repeat(2, 1fr) !important;
      }
    }
    @media (max-width: 600px) {
      .hero-content h1 {
        font-size: 2.5rem !important;
      }
      .features-grid {
        grid-template-columns: 1fr !important;
      }
      .download-button {
        display: none;
      }
    }
  `}</style>
);

const styles: { [key: string]: CSSProperties } = {
  header: {
    background: 'var(--card-background)',
    padding: '1rem 0',
    boxShadow: '0 2px 4px rgba(0,0,0,0.05)',
    position: 'sticky',
    top: 0,
    zIndex: 1000,
  },
  headerContent: {
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  logo: {
    fontSize: '1.5rem',
    fontWeight: 'bold',
    color: 'var(--primary-color)',
  },
  hero: {
    padding: '4rem 0',
    textAlign: 'center',
  },
  heroContent: {
    maxWidth: '800px',
    margin: '0 auto',
  },
  headline: {
    fontSize: '3.5rem',
    fontWeight: 700,
    color: 'var(--primary-color)',
    margin: '0 0 1rem',
  },
  subheadline: {
    fontSize: '1.25rem',
    color: 'var(--light-text-color)',
    marginBottom: '2rem',
  },
  description: {
    fontSize: '1.1rem',
    lineHeight: '1.7',
    marginBottom: '1rem',
  },
  playStoreButton: {
    display: 'inline-block',
    marginTop: '1.5rem',
    transition: 'transform 0.2s ease-in-out',
  },
  playStoreImage: {
    height: '60px',
    border: 'none',
  },
  section: {
    padding: '3rem 0',
  },
  sectionTitle: {
    textAlign: 'center',
    fontSize: '2.5rem',
    fontWeight: 500,
    color: 'var(--primary-color)',
    marginBottom: '2.5rem',
  },
  featuresGrid: {
    display: 'grid',
    gridTemplateColumns: 'repeat(3, 1fr)',
    gap: '2rem',
  },
  featureCard: {
    background: 'var(--card-background)',
    borderRadius: '8px',
    padding: '2rem',
    textAlign: 'center',
    boxShadow: '0 4px 15px rgba(0,0,0,0.05)',
    transition: 'transform 0.2s ease, box-shadow 0.2s ease',
  },
  featureIcon: {
    color: 'var(--secondary-color)',
    marginBottom: '1rem',
  },
  featureTitle: {
    fontSize: '1.25rem',
    fontWeight: 500,
    color: 'var(--primary-color)',
    marginBottom: '0.5rem',
  },
  featureDescription: {
    fontSize: '0.95rem',
    color: 'var(--light-text-color)',
  },
  textSectionContent: {
    maxWidth: '800px',
    margin: '0 auto',
    background: 'var(--card-background)',
    padding: '2rem',
    borderRadius: '8px',
    boxShadow: '0 4px 15px rgba(0,0,0,0.05)',
  },
  textList: {
    listStyleType: "'â€¢ '",
    paddingLeft: '1.2rem',
  },
  disclaimerSection: {
    background: 'var(--disclaimer-bg)',
    color: 'var(--disclaimer-text)',
    padding: '2rem',
    borderRadius: '8px',
    border: '1px solid var(--disclaimer-border)',
  },
  disclaimerTitle: {
    color: 'var(--disclaimer-text)',
    fontWeight: 'bold',
  },
  footer: {
    background: 'var(--primary-color)',
    color: '#fff',
    textAlign: 'center',
    padding: '1.5rem 0',
    marginTop: '3rem',
  },
};

// --- Components ---

const Header = () => (
  <header style={styles.header}>
    <div className="container" style={styles.headerContent}>
      <span style={styles.logo}>{appDetails.name}</span>
      <a
        href={appDetails.playStoreUrl}
        target="_blank"
        rel="noopener noreferrer"
        className="download-button"
        aria-label="Download App on Google Play"
      >
        Download App
      </a>
    </div>
  </header>
);

const Hero = () => (
  <section style={styles.hero}>
    <div className="container hero-content">
      <h1 style={styles.headline}>{appDetails.name}</h1>
      <p style={styles.subheadline}>{appDetails.tagline}</p>
      {appDetails.description.map((p, i) => (
        <p key={i} style={styles.description}>{p}</p>
      ))}
      <a
        href={appDetails.playStoreUrl}
        target="_blank"
        rel="noopener noreferrer"
        style={styles.playStoreButton}
        aria-label="Get it on Google Play"
        onMouseOver={e => e.currentTarget.style.transform = 'scale(1.05)'}
        onMouseOut={e => e.currentTarget.style.transform = 'scale(1)'}
      >
        <img src={appDetails.playStoreBadgeUrl} alt="Get it on Google Play" style={styles.playStoreImage} />
      </a>
    </div>
  </section>
);

const FeaturesSection = () => (
  <section id="features" style={styles.section}>
    <div className="container">
      <h2 style={styles.sectionTitle}>What Aesculai Offers</h2>
      <div className="features-grid" style={styles.featuresGrid}>
        {features.map((feature, i) => (
          <div 
            key={i} 
            style={styles.featureCard}
            onMouseOver={e => {
              e.currentTarget.style.transform = 'translateY(-5px)';
              e.currentTarget.style.boxShadow = '0 8px 20px rgba(0,0,0,0.1)';
            }}
            onMouseOut={e => {
              e.currentTarget.style.transform = 'translateY(0)';
              e.currentTarget.style.boxShadow = '0 4px 15px rgba(0,0,0,0.05)';
            }}
          >
            <div style={styles.featureIcon}>{feature.icon}</div>
            <h3 style={styles.featureTitle}>{feature.title}</h3>
            <p style={styles.featureDescription}>{feature.description}</p>
          </div>
        ))}
      </div>
    </div>
  </section>
);

const TextSection = ({ data }) => (
  <section style={styles.section}>
    <div className="container">
      <h2 style={styles.sectionTitle}>{data.title}</h2>
      <div style={styles.textSectionContent}>
        <p>{data.content}</p>
        {data.points && (
          <ul style={styles.textList}>
            {data.points.map((point, i) => <li key={i}>{point}</li>)}
          </ul>
        )}
      </div>
    </div>
  </section>
);

const DisclaimerSection = ({ data }) => (
  <section style={styles.section}>
    <div className="container">
       <div style={styles.disclaimerSection}>
        <h2 style={{...styles.sectionTitle, ...styles.disclaimerTitle, marginBottom: '1rem'}}>{data.title}</h2>
        <p>{data.content}</p>
      </div>
    </div>
  </section>
);


const Footer = () => (
  <footer style={styles.footer}>
    <div className="container">
      <p>&copy; {new Date().getFullYear()} {appDetails.name}. All rights reserved.</p>
    </div>
  </footer>
);

const App = () => {
  return (
    <>
      <GlobalStyles />
      <Header />
      <main>
        <Hero />
        <FeaturesSection />
        <TextSection data={permissionsInfo} />
        <TextSection data={aboutInfo} />
        <DisclaimerSection data={disclaimerInfo} />
      </main>
      <Footer />
    </>
  );
};

const root = createRoot(document.getElementById('root')!);
root.render(
  <StrictMode>
    <App />
  </StrictMode>
);